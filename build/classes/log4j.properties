log4j.rootLogger=DEBUG, Console

log4j.logger.java.sql.ResultSet=INFO
log4j.logger.org.apache=INFO
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG

#Console
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n
#log4j.appender.Console.encoding=UTF-8

#DailyFile
#log4j.appender.DailyFile=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.DailyFile.DatePattern='.'yyyy-MM-dd'.log'
#log4j.appender.DailyFile.File=${myApp.root}/logs/daily.log
#log4j.appender.DailyFile.Append=true
#log4j.appender.DailyFile.Threshold=DEBUG
#log4j.appender.DailyFile.layout=org.apache.log4j.PatternLayout
#log4j.appender.DailyFile.layout.ConversionPattern=%d %-5p [%t] %c - %m%n
#log4j.appender.DailyFile.encoding=UTF-8

#符号含义
#    %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy-MM-dd HH:mm:ss}，输出类似：2002-10-18 22:10:28
#    %t 输出产生该日志事件的线程名
#    %c 输出日志信息所属的类的全名 
#    %m 输出代码中指定的信息，如log(message)中的message 
#    %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n” 

#    %l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行 
#    %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推 
#    %r 输出自应用启动到输出该日志信息所耗费的毫秒数 
